[KUBERNETES]
- Cluster: consiste em master e nodes

[Master]
- Gerencia o cluster de forma geral
- Kubernetes API: expoem recursos para os Kubelets e usuarios externos para gerenciar o cluster
- etcd: banco de dados interno

[Node]
- VM's ou maquinas fisicas que servem como workers para as aplicacoes dentro do cluster
- Kubelet: 
  - gerencia os pods dentro do node
  - comunica-se com o Master
  - container runtime

[Minikube]
- Opção leve para usar o Kubernetes, cria uma VM e faz deploy Node e um Cluster
- Minikube CLI: command tool para gerenciar o cluster

[Controller]
- Gerenciamento do deployment de aplicacoes
- Deployment: gerenciar as config do ReplicaSet
- ReplicaSet: gerencia as replicas dos pods e assegura que todos estao rodando com o mesmo template
"""
  kubectl create deploymenent nginx --image=nginx
"""

[Kubeclt]
- Comunica com o Kubernetes API para gerenciar o cluster
- run command (before 1.18) -> criar um deployment -> Deployment cria ReplicaSet -> ReplicaSet criar Pod

[Pod]
- Conjunto de containers que compartilhar informacoes como:
  - volume
  - ip address
  - portas
  - imagens especificas

[Service]
- Agrupa os pods por meio de labels
- Expoem os endpoint dos pods
"""
  kubectl expose deployments/nginx type="NodePort" --port 80
"""

[Configmap]
- Armaneza variavies de ambiente e dados usados artefatos dentro do Pod
- Gerado atraves do kubectl ou pelo configMapGenerator no arquivo kustomization.yaml
"""
  kubectl create configmap gamer-config --from-config-ui.properties
  kubectl describe configmap gamer-config -o yaml
"""

[Namespace]
- Cluster virtual dentro de um cluster fisico
- Separa recursos entre os cluster

[Setups on Ubuntu]
- Minikube
- MicroK8S